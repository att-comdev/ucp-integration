{
  "comments": [
    {
      "key": {
        "uuid": "4c582e4f_f7c882ea",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 61,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "v1.0 or rather v#.# to be consistent with L32",
      "range": {
        "startLine": 61,
        "startChar": 19,
        "endLine": 61,
        "endChar": 21
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f85ed4b5_7bb9b2dc",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 62,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "This field is still a mystery to me. Is there a use case where UCP will actually populate this with something useful?",
      "range": {
        "startLine": 62,
        "startChar": 4,
        "endLine": 62,
        "endChar": 19
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37aededc_5bcab036",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 63,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "I\u0027d document the enum possibility: \"Success|Failure\"",
      "range": {
        "startLine": 63,
        "startChar": 14,
        "endLine": 63,
        "endChar": 24
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a676287_04dba21d",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 65,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "This is incorrect and contradicts the k8s documentation. According to which: \"reason may contain a machine-readable, one-word, CamelCase description of why this operation is in the Failure status. If this value is empty there is no information available. The reason clarifies an HTTP status code but does not override it.\"\n\nThat being said, I don\u0027t see the value in it personally, so long as the API is raising a human-readable exception type like \"HttpNotFound\" -- in which case the reason is rather obvious.",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 65,
        "endChar": 46
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9697ea78_99a3ca5f",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 85,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "``error: True``",
      "range": {
        "startLine": 85,
        "startChar": 22,
        "endLine": 85,
        "endChar": 35
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49623a70_e6596ef0",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 86,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "``code``",
      "range": {
        "startLine": 86,
        "startChar": 60,
        "endLine": 86,
        "endChar": 67
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8d80cf8_b7c23fff",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 111,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "Why is this a requirement? It\u0027s doubtful it\u0027ll ever take more than 30 seconds, anyway.",
      "range": {
        "startLine": 111,
        "startChar": 28,
        "endLine": 111,
        "endChar": 72
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c653e8e1_29f415d4",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 147,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "My vote is to standardize this around \"Success\" and \"Failure\". Varying this up leads to unnecessary complexity.",
      "range": {
        "startLine": 147,
        "startChar": 15,
        "endLine": 147,
        "endChar": 22
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cda3a0a_2c5f7664",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 148,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "This can only be gleaned if this information is made mandatory in a DataSchema. Namely, the metadata.labels.application: \u003cUCP Component\u003e field will have to be provided. Otherwise DH will have to do hacky stuff just to figure out the UCP component name from a DataSchema document.",
      "range": {
        "startLine": 148,
        "startChar": 16,
        "endLine": 148,
        "endChar": 38
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1720a008_ca6ac3cb",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 149,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "Ok, this is a good example.",
      "range": {
        "startLine": 149,
        "startChar": 15,
        "endLine": 149,
        "endChar": 25
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c45d7037_4887f58b",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 219,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "Service Unavailable|Healthy again feels needlessly too specific.",
      "range": {
        "startLine": 219,
        "startChar": 13,
        "endLine": 219,
        "endChar": 36
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1911d10_e98791e5",
        "filename": "docs/source/api-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 221,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "Again, this violates the one-word camelCase rule above.",
      "range": {
        "startLine": 221,
        "startChar": 15,
        "endLine": 221,
        "endChar": 28
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d750bc7f_e3fb3e78",
        "filename": "docs/source/code-conventions.rst",
        "patchSetId": 14
      },
      "lineNbr": 131,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "Right now in Drydock tests lives outside a package, just pointing that out so that way we can discuss here whether we should change that in Drydock or make this looser. Personally, I prefer it like this, though. But I do think it\u0027s just a preference, not some canonical standard.",
      "range": {
        "startLine": 131,
        "startChar": 11,
        "endLine": 131,
        "endChar": 16
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b388cc3_a4edfbca",
        "filename": "docs/source/index.rst",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2017-12-11T21:15:35Z",
      "side": 1,
      "message": "This needs a corresponding reference on L20, around column 5.",
      "range": {
        "startLine": 45,
        "startChar": 3,
        "endLine": 45,
        "endChar": 25
      },
      "revId": "fe6863a6717b4986f2ad44330ba3e31a0c14f980",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}